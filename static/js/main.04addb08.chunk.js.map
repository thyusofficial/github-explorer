{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","assets/github-background-dark.svg","utils/usePersistedState.ts","components/Header/styles.ts","components/Header/index.tsx","styles/themes/light.ts","styles/themes/dark.ts","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","DownAndUp","keyframes","Container","styled","header","props","theme","colors","title","textSecundary","shade","Header","toggleTheme","themeTitle","useContext","ThemeContext","src","logoImg","alt","type","onClick","size","to","error","background","titleSecundary","button","buttonColor","text","shape","createGlobalStyle","githubBackground","githubBackgroundDark","api","axios","create","baseURL","Title","h1","Form","form","hasError","css","Repositories","div","Error","span","Dashboard","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","repositories","setRepositories","event","a","preventDefault","get","response","data","onSubmit","value","onChange","e","target","placeholder","map","repository","full_name","owner","avatar_url","login","description","RepositoryInfo","section","Issues","setRepository","issues","setIssues","params","useRouteMatch","then","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","user","Routes","exact","path","component","Repository","App","light","setTheme","useCallback","dark","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04addb08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background-dark.666f2825.svg\";","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nconst DownAndUp = keyframes`\n  0%{\n    transform: translateY(-100%);\n    opacity: 0;\n  }\n  50%{\n    transform: translateY(100%);\n    opacity: 1;\n  }\n  100%{\n    transform: translateY(0);\n  }\n`;\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n\n  img {\n    margin-right: 56px;\n  }\n\n  button {\n    background: none;\n    border: none;\n    color: ${props => props.theme.colors.title};\n\n    svg {\n      animation: ${DownAndUp} 0.5s;\n    }\n  }\n\n  a {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: ${props => props.theme.colors.textSecundary};\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${props => shade(0.2, props.theme.colors.textSecundary)};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport { FiSun, FiMoon, FiChevronLeft } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from 'styled-components';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container } from './styles';\n\ninterface HeaderProps {\n  toggleTheme(): void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleTheme }) => {\n  const { title: themeTitle } = useContext(ThemeContext);\n  return (\n    <Container>\n      <img src={logoImg} alt=\"Github explorer logo\" />\n\n      <button type=\"button\" onClick={toggleTheme}>\n        {themeTitle === 'light' ? <FiSun size={20} /> : <FiMoon size={20} />}\n      </button>\n\n      <Link to=\"/\">\n        <FiChevronLeft size={20} />\n        Voltar\n      </Link>\n    </Container>\n  );\n};\n\nexport default Header;\n","export default {\n  title: 'light',\n\n  colors: {\n    error: '#c53030',\n\n    background: '#F0F0F5',\n    title: '#3A3A3A',\n    titleSecundary: '#3D3D4D',\n    button: '#04d361',\n    buttonColor: '#fff',\n    text: '#737380',\n    textSecundary: '#a8a8b3',\n    shape: '#fff',\n  },\n};\n","export default {\n  title: 'dark',\n\n  // colors: {\n  //   error: '#cf6679',\n\n  //   background: '#312E38',\n  //   title: '#F4EDE8',\n  //   titleSecundary: '#F4EDE8',\n  //   button: '#04d361',\n  //   text: '#999591',\n  //   textSecundary: '#a8a8b3',\n  //   shape: '#534F5E',\n  // },\n\n  colors: {\n    error: '#cf6679',\n\n    background: '#121212',\n    title: '#F4EDE8',\n    titleSecundary: '#8d8d8d',\n    button: '#03dac5',\n    buttonColor: '#121212',\n    text: '#fff',\n    textSecundary: '#fff',\n    shape: '#1e1e1e',\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\nimport githubBackgroundDark from '../assets/github-background-dark.svg';\n\nconst backgroundImage = (props: { theme: { title: string } }) => {\n  return props.theme.title === 'light'\n    ? githubBackground\n    : githubBackgroundDark;\n};\n\nexport default createGlobalStyle`\n  *{\n    margin:0;\n    padding:0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    background:${props =>\n      props.theme.colors.background} url(${backgroundImage}) no-repeat 70% top;\n  }\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button{\n    font: 16px Roboto, sans-serif;\n  }\n\n  button{\n    cursor: pointer;\n  }\n\n  #root{\n    max-width: 960px;\n    margin:0 auto;\n    padding: 40px 20px;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.colors.title};\n\n  max-width: 450px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n  display: flex;\n\n  input,\n  button {\n    height: 70px;\n  }\n\n  input {\n    flex: 1;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    background: ${props => props.theme.colors.shape};\n    color: ${props => props.theme.colors.title};\n    border: 2px solid ${props => props.theme.colors.shape};\n\n    ${props =>\n      props.hasError &&\n      css`\n        border: 2px solid #c53030;\n        border-right: 0;\n      `}\n\n    &::placeholder {\n      color: ${props => props.theme.colors.textSecundary};\n    }\n  }\n\n  button {\n    width: 210px;\n    background: ${props => props.theme.colors.button};\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: ${props => props.theme.colors.buttonColor};\n    font-weight: bold;\n    transition: background 0.2s;\n\n    &:hover {\n      background: ${props => shade(0.2, props.theme.colors.button)};\n    }\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: ${props => props.theme.colors.shape};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.textSecundary};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${props => props.theme.colors.text};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: ${props => props.theme.colors.error};\n  margin-top: 8px;\n`;\n","import React, { useState, FormEvent, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite autor/nome do repositório.');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`/repos/${newRepo}`);\n\n      setRepositories([...repositories, response.data]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca do repositório.');\n    }\n  }\n\n  return (\n    <>\n      <Title> Explore repositórios no Github.</Title>\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.text};\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: ${props => props.theme.colors.text};\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: ${props => props.theme.colors.shape};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.textSecundary};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`/repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`/repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map(issue => (\n          <a key={issue.id} href={issue.html_url}>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Dashboard} />\n    <Route path=\"/repositories/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useCallback } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\n\nimport usePersistedState from './utils/usePersistedState';\nimport Header from './components/Header';\n\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>(\n    '@GitHubExplorer:theme',\n    light,\n  );\n\n  const toggleTheme = useCallback(() => {\n    setTheme(theme.title === 'light' ? dark : light);\n  }, [theme, setTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header toggleTheme={toggleTheme} />\n        <Routes />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}